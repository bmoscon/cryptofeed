[tool.ruff]
line-length = 120
target-version = "py39"
exclude = [
  ".git",
  ".trunk",
  "__pycache__",
  "*.egg-info",
  ".venv",
  "venv",
  "build",
  "dist",
]

[tool.ruff.lint]
# Enable comprehensive rule sets for professional Python development
select = [
  "E",    # pycodestyle errors
  "W",    # pycodestyle warnings
  "F",    # pyflakes
  "I",    # isort
  "N",    # pep8-naming
  "D",    # pydocstyle
  "UP",   # pyupgrade
  "YTT",  # flake8-2020
  "BLE",  # flake8-blind-except
  "B",    # flake8-bugbear
  "A",    # flake8-builtins
  "COM",  # flake8-commas
  "C4",   # flake8-comprehensions
  "DTZ",  # flake8-datetimez
  "T10",  # flake8-debugger
  "EM",   # flake8-errmsg
  "EXE",  # flake8-executable
  "FA",   # flake8-future-annotations
  "ISC",  # flake8-implicit-str-concat
  "ICN",  # flake8-import-conventions
  "G",    # flake8-logging-format
  "INP",  # flake8-no-pep420
  "PIE",  # flake8-pie
  "T20",  # flake8-print
  "PYI",  # flake8-pyi
  "PT",   # flake8-pytest-style
  "Q",    # flake8-quotes
  "RSE",  # flake8-raise
  "RET",  # flake8-return
  "SLF",  # flake8-self
  "SLOT", # flake8-slots
  "SIM",  # flake8-simplify
  "TID",  # flake8-tidy-imports
  "TCH",  # flake8-type-checking
  "ARG",  # flake8-unused-arguments
  "PTH",  # flake8-use-pathlib
  "ERA",  # eradicate
  "PD",   # pandas-vet
  "PGH",  # pygrep-hooks
  "PL",   # pylint
  "TRY",  # tryceratops
  "FLY",  # flynt
  "NPY",  # numpy
  "PERF", # perflint
  "FURB", # refurb
  "LOG",  # flake8-logging
  "RUF",  # ruff-specific
]

ignore = [
  "E501",    # Line too long (handled by formatter)
  "D100",    # Missing docstring in public module
  "D101",    # Missing docstring in public class
  "D102",    # Missing docstring in public method
  "D103",    # Missing docstring in public function
  "D104",    # Missing docstring in public package
  "D105",    # Missing docstring in magic method
  "D107",    # Missing docstring in __init__
  "D203",    # 1 blank line required before class docstring
  "D213",    # Multi-line docstring summary should start at the second line
  "COM812",  # Missing trailing comma (handled by formatter)
  "ISC001",  # Implicit string concatenation (conflicts with formatter)
  "PLR0913", # Too many arguments to function call
  "PLR2004", # Magic value used in comparison
  "TRY003",  # Avoid specifying long messages outside exception class
  "EM101",   # Exception must not use a string literal
  "EM102",   # Exception must not use an f-string literal
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
  "D",       # Disable docstring requirements in tests
  "PLR2004", # Allow magic values in tests
  "S101",    # Allow assert statements in tests
  "ARG001",  # Allow unused function arguments in tests
  "ARG005",  # Allow unused lambda arguments in tests
  "FBT001",  # Allow boolean positional arguments in tests
  "FBT003",  # Allow boolean positional arguments in tests
]
"examples/**/*.py" = [
  "D",      # Disable docstring requirements in examples
  "T201",   # Allow print statements in examples
  "INP001", # Allow implicit namespace packages in examples
]

[tool.ruff.lint.isort]
known-first-party = ["cryptofeed"]
force-sort-within-sections = true
split-on-trailing-comma = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 10
max-branches = 15
max-returns = 8
max-statements = 60
